---
name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixpkgs-unstable

      - uses: cachix/cachix-action@v16
        with:
          name: devenv

      - name: Install devenv
        run: nix-env -if https://github.com/cachix/devenv/tarball/latest

      - name: Test build environment
        run: devenv test

      # Start PostgreSQL from devenv
      - name: Start PostgreSQL from devenv
        run: devenv up &

      # Wait for PostgreSQL to be available
      - name: Wait for PostgreSQL
        run: |
          # Wait up to 30 seconds for PostgreSQL to be ready
          timeout=30
          until devenv shell pg_isready -h localhost -U postgres || [ $timeout -le 0 ]
          do
            echo "Waiting for PostgreSQL to be ready... ($timeout seconds left)"
            sleep 1
            timeout=$((timeout-1))
          done

          if [ $timeout -le 0 ]; then
            echo "Timed out waiting for PostgreSQL"
            exit 1
          else
            echo "PostgreSQL is ready!"
          fi

      # Phoenix application tests
      - name: Setup Phoenix environment
        run: devenv shell "mix local.hex --force && mix local.rebar --force"

      - name: Install Phoenix dependencies
        run: devenv shell "mix deps.get"

      - name: Compile Phoenix application
        run: devenv shell "mix compile --warnings-as-errors"

      - name: Create and migrate test database
        run: devenv shell "mix ecto.create && mix ecto.migrate"
        env:
          MIX_ENV: test

      - name: Run Phoenix tests
        run: devenv shell "mix test"
        env:
          MIX_ENV: test
