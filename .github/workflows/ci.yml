---
name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixpkgs-unstable

      - uses: cachix/cachix-action@v16
        with:
          name: devenv

      - name: Install devenv
        run: nix-env -if https://github.com/cachix/devenv/tarball/latest

      - name: Test build environment
        run: devenv test

      # Start PostgreSQL from devenv and ensure it's ready
      - name: Start PostgreSQL and wait until ready
        run: |
          start-postgres &
          echo "Waiting for PostgreSQL to be ready..."

          timeout=120
          start_time=$(date +%s)
          while ! devenv run check-postgres &>/dev/null; do
            current_time=$(date +%s)
            elapsed_time=$((current_time - start_time))
            if [ $elapsed_time -ge $timeout ]; then
              echo "Timed out waiting for PostgreSQL after ${timeout} seconds."
              devenv run start-postgres
              sleep 5
              if ! devenv run check-postgres; then
                echo "Failed to start PostgreSQL after retry."
                exit 1
              else
                echo "PostgreSQL successfully started after retry."
                break
              fi
            fi
            sleep 2
          done
          echo "PostgreSQL is ready."

      - name: Setup Phoenix environment
        shell: devenv shell bash -- -e {0}
        env:
          HOME: "/home/runner"
        run: |
          mix local.hex --force
          mix local.rebar --force

      - name: Install Phoenix dependencies
        shell: devenv shell bash -- -e {0}
        env:
          HOME: "/home/runner"
        run: mix deps.get

      - name: Compile Phoenix application
        shell: devenv shell bash -- -e {0}
        env:
          HOME: "/home/runner"
        run: mix compile --warnings-as-errors

      - name: Create and migrate test database
        shell: devenv shell bash -- -e {0}
        env:
          HOME: "/home/runner"
          MIX_ENV: test
        run: |
          mix ecto.create
          mix ecto.migrate

      - name: Run Phoenix tests
        shell: devenv shell bash -- -e {0}
        env:
          HOME: "/home/runner"
          MIX_ENV: test
        run: mix test
